import { EntitySet, EntityType, Property } from '@sap-ux/annotation-converter';
import { ODataMetadata } from './metadata';
import { KeyDefinitions } from './fileBasedMockData';
export interface ODataRequestInterface {
}
export interface EntitySetInterface {
    checkKeyValue(mockData: object, keyValues: object, keyName: string, keyProp?: Property): boolean;
    isV4(): boolean;
}
export interface DataAccessInterface {
    isV4(): boolean;
    getNavigationPropertyKeys(data: any, navPropDetail: any, currentEntityType: EntityType, currentKeys: Record<string, string>, forCreate?: boolean): Record<string, string>;
    getMockEntitySet(entityTypeName: any, generateMockData?: boolean, containedEntityType?: EntityType, containedData?: any): Promise<EntitySetInterface>;
    getData(odataRequest: ODataRequestInterface): Promise<any>;
    getParentEntity(keyValues: KeyDefinitions, tenantId: string, entitySetDefinition: EntitySet): any;
    getMetadata(): ODataMetadata;
    debug: boolean;
    log: any;
}
/**
 *
 */
export declare class ExecutionError extends Error {
    statusCode: number;
    messageData: object;
    isSAPMessage: boolean;
    isCustomError: boolean;
    headers: Record<string, string>;
    /**
     * @param message
     * @param statusCode
     * @param messageData
     * @param isSAPMessage
     */
    constructor(message: string, statusCode: number, messageData: object, isSAPMessage: boolean, headers?: Record<string, string>);
}
export declare function _getDateTimeOffset(isV4: boolean): string;
